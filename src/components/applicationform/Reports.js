import React, { useState, useEffect } from 'react';
import axios from 'axios';
import jsPDF from 'jspdf';
import patient from '../../assets/patient.png';
import 'jspdf-autotable'; // Import the autoTable plugin
import {Link, useNavigate } from 'react-router-dom';
import './Report.css';

const Reports = () => {
const [sidebarActive, setSidebarActive] = useState(false);
const [studentDetails, setStudentDetails] = useState({});
const navigate = useNavigate();



// Function to toggle sidebar active state
const toggleSidebar = () => {
    setSidebarActive(!sidebarActive);
    }; 
useEffect(() => {
const token = sessionStorage.getItem('authToken');
if (!token) {
navigate('/signin'); // Redirect if not authenticated
} else {
axios
.get('http://localhost:5000/api/reports', {
headers: { Authorization: token },
})
.then((response) => {
setStudentDetails(response.data);
})
.catch((error) => console.error('Error fetching student data:', error));
}
}, [navigate]);

const downloadReport = () => {
    const doc = new jsPDF();
  
    doc.setFont('times', 'normal'); // 'times' for Times New Roman font family

    // Title Section
    doc.setFontSize(25);
    doc.text('Bursary Report', 105, 20, null, null, 'center');
    doc.setFontSize(20);
    doc.text('Generated by Bursary Management System', 105, 30, null, null, 'center');
    doc.line(10, 35, 200, 35); // Add a horizontal line

    
  
    // Table Data
    const personalInfo = [
      ['Reference Number', studentDetails.reference_number || 'N/A'], // Add Reference Number
      ['Full Name', studentDetails.fullname || 'N/A'],
      ['Sub County', studentDetails.subcounty || 'N/A'],
      ['Ward', studentDetails.ward || 'N/A'],
      ['Institution', studentDetails.institution || 'N/A'],
      ['Admission Number', studentDetails.admission || 'N/A'],
      ['Date of Birth', studentDetails.birth || 'N/A'],
      ['Gender', studentDetails.gender || 'N/A'],
    ];
    
  
    const bursaryInfo = [
      ['Allocated Amount', studentDetails.bursary || 'N/A'],
      ['Application Status', studentDetails.status || 'N/A'],
    ];
  
    
    // Render Personal Information Table
    doc.autoTable({
        startY: 50, // Adjust based on your layout
        head: [['Personal Information', 'Details']],
        body: personalInfo,
        theme: 'striped',
        headStyles: { 
          fillColor: [41, 128, 185], 
          textColor: [255, 255, 255], 
          fontSize: 14 // Increase the font size for the header
        },
        bodyStyles: { fontSize: 12 },
        styles: { font: 'times' }, // Set font family for the table
    });
  
    // Render Bursary Information Table
    doc.autoTable({
      startY: doc.lastAutoTable.finalY + 10,
      head: [['Bursary Information', 'Details']],
      body: bursaryInfo,
      theme: 'grid',
      headStyles: { fillColor: [39, 174, 96], textColor: [255, 255, 255], fontSize: 14 },
      bodyStyles: { fontSize: 12 },
      styles: { font: 'times' }, // Set font family for the table
    });
  
    // Declaration Table
    const declarationInfo = [
      ['Declaration', 'I hereby confirm the above details are accurate and complete.'],
      ['Committee Member Name', '________________________'],
      ['Signature', '________________________'],
      ['Date', '________________________'],
    ];
  
    // Render Declaration Table
    doc.autoTable({
      startY: doc.lastAutoTable.finalY + 20,
      head: [['Declaration', '']],
      body: declarationInfo,
      theme: 'grid',
      headStyles: { fillColor: [192, 57, 43], textColor: [255, 255, 255] ,fontSize: 14 },
      bodyStyles: { fontSize: 12, halign: 'left' },
      styles: { font: 'times' }, // Set font family for the table
    });
  
    // Footer Section
    doc.setFontSize(10);
    doc.text(`Generated on: ${new Date().toLocaleString()}`, 10, 290);
    doc.text('Bursary Management System', 105, 290, null, null, 'center');
  
    // Save the PDF
    doc.save('Bursary_Report.pdf');
  };

  return (
    <div>
{/* Top Bar */}
<div className="topbars">
<div className="logos">
<h2>EBursary</h2>
</div>

<h1>Welcome:{studentDetails.fullname}</h1>
<div className="users">
<img src={patient} alt="User" />
</div>
<i class="bi bi-bell-fill"></i>
</div>

{/* Sidebar */}
<div className={`sidebars ${sidebarActive ? 'active' : ''}`}>
<div>
<i className="bi bi-list" id="btn" onClick={toggleSidebar}></i>
<ul>
<li>
<Link to="/student">
<i className="bi bi-house-door-fill"></i>
<span className="links-name">Dashboard</span>
</Link>
<span className="tooltip">Dashboard</span>
</li>
<li>
<Link to="/personaldetails">
<i className="bi bi-file-earmark-text-fill"></i>
<span className="links-name">Apply</span>
</Link>
<span className="tooltip">Apply</span>
</li>
<li>
<Link to="/documentupload">
<i class="bi bi-paperclip"></i>
<span className="links-name">File attached</span>
</Link>
<span className="tooltip">File attached</span>
</li>
<li>
<Link to="/reports">
<i class="bi bi-file-earmark-arrow-down-fill"></i>
<span className="links-name">Download Report</span>
</Link>
<span className="tooltip">Report</span>
</li>
<li>
<Link>
<i className="bi bi-chat-dots-fill"></i>
<span className="links-name">Messages</span>
</Link>
<span className="tooltip">Messages</span>
</li>
<li>
<Link to='/setting'>
<i className="bi bi-gear-fill"></i>
<span className="links-name">Settings</span>
</Link>
<span className="tooltip">Settings</span>
</li>
<br></br>
<br></br>
<br></br>
<br></br>
<br></br>
<br></br>
<br></br>
<br></br>
<br></br>
<br></br>
<br></br>
<div className="Navigation">
<li>
<Link to='/'>
<i className="bi bi-box-arrow-right"></i>
<span className="links-name">Logout</span>
</Link>
<span className="tooltip">Logout</span>
</li>
</div>
</ul>
</div>
</div>
<div className="report-container">
<h1>Bursary Report</h1>
<table className="report-table">
<thead>
<tr>
<th>Reference Number</th>
<th>Application Title</th>
<th>Application Status</th>
<th>Download Application</th>
</tr>
</thead>
<tbody>
<tr>
<td>{studentDetails.reference_number || 'N/A'}</td>
<td>Bursary Application</td>
<td>{studentDetails.status || 'N/A'}</td>
<td>
<i className="bi bi-download" onClick={downloadReport}></i>
</td>
</tr>
</tbody>
</table>
</div>
</div>
);
};

export default Reports;